<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.lanqiao.mapper.AlbumCommentMapper" >
  <resultMap id="BaseResultMap" type="org.lanqiao.entity.AlbumComment" >
    <id column="albumc_id" property="albumcId" jdbcType="INTEGER" />
    <result column="album_id" property="albumId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="albumc_text" property="albumcText" jdbcType="VARCHAR" />
    <result column="albumc_likes" property="albumcLikes" jdbcType="INTEGER" />
    <result column="albumc_to_id" property="albumcToId" jdbcType="INTEGER" />
    <result column="albumc_time" property="albumcTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    albumc_id, album_id, user_id, albumc_text, albumc_likes, albumc_to_id, albumc_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from albumcomment
    where albumc_id = #{albumcId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from albumcomment
    where albumc_id = #{albumcId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.lanqiao.entity.AlbumComment" >
    insert into albumcomment (albumc_id, album_id, user_id, 
      albumc_text, albumc_likes, albumc_to_id, 
      albumc_time)
    values (#{albumcId,jdbcType=INTEGER}, #{albumId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{albumcText,jdbcType=VARCHAR}, #{albumcLikes,jdbcType=INTEGER}, #{albumcToId,jdbcType=INTEGER}, 
      #{albumcTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.lanqiao.entity.AlbumComment" >
    insert into albumcomment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="albumcId != null" >
        albumc_id,
      </if>
      <if test="albumId != null" >
        album_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="albumcText != null" >
        albumc_text,
      </if>
      <if test="albumcLikes != null" >
        albumc_likes,
      </if>
      <if test="albumcToId != null" >
        albumc_to_id,
      </if>
      <if test="albumcTime != null" >
        albumc_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="albumcId != null" >
        #{albumcId,jdbcType=INTEGER},
      </if>
      <if test="albumId != null" >
        #{albumId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="albumcText != null" >
        #{albumcText,jdbcType=VARCHAR},
      </if>
      <if test="albumcLikes != null" >
        #{albumcLikes,jdbcType=INTEGER},
      </if>
      <if test="albumcToId != null" >
        #{albumcToId,jdbcType=INTEGER},
      </if>
      <if test="albumcTime != null" >
        #{albumcTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.lanqiao.entity.AlbumComment" >
    update albumcomment
    <set >
      <if test="albumId != null" >
        album_id = #{albumId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="albumcText != null" >
        albumc_text = #{albumcText,jdbcType=VARCHAR},
      </if>
      <if test="albumcLikes != null" >
        albumc_likes = #{albumcLikes,jdbcType=INTEGER},
      </if>
      <if test="albumcToId != null" >
        albumc_to_id = #{albumcToId,jdbcType=INTEGER},
      </if>
      <if test="albumcTime != null" >
        albumc_time = #{albumcTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where albumc_id = #{albumcId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.lanqiao.entity.AlbumComment" >
    update albumcomment
    set album_id = #{albumId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      albumc_text = #{albumcText,jdbcType=VARCHAR},
      albumc_likes = #{albumcLikes,jdbcType=INTEGER},
      albumc_to_id = #{albumcToId,jdbcType=INTEGER},
      albumc_time = #{albumcTime,jdbcType=TIMESTAMP}
    where albumc_id = #{albumcId,jdbcType=INTEGER}
  </update>
</mapper>