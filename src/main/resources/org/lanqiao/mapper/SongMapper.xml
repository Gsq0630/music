<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.lanqiao.mapper.SongMapper">
    <resultMap id="SongResultMap" type="org.lanqiao.entity.Song">
        <id column="song_id" property="songId" jdbcType="INTEGER"/>
        <result column="song_name" property="songName" jdbcType="VARCHAR"/>
        <result column="song_lyric" property="songLyric" jdbcType="VARCHAR"/>
        <result column="song_description" property="songDescription" jdbcType="VARCHAR"/>
        <result column="song_url" property="songUrl" jdbcType="VARCHAR"/>
        <result column="song_duration" property="songDuration" jdbcType="VARCHAR"/>
        <result column="song_download" property="songDownload" jdbcType="INTEGER"/>
        <result column="song_commet_count" property="songCommetCount" jdbcType="INTEGER"/>
        <result column="song_play_times" property="songPlayTimes" jdbcType="INTEGER"/>
        <result column="song_create_date" property="songCreateDate" jdbcType="TIMESTAMP"/>
        <result column="song_status" property="songStatus" jdbcType="INTEGER"/>
        <result column="song_keep_num" property="songKeepNum" jdbcType="INTEGER"/>
        <result column="album_id" property="albumId" jdbcType="INTEGER"/>
        <result column="song_pic_url" property="songPicUrl" jdbcType="VARCHAR"/>
        <result column="singer_id" property="singerId" jdbcType="INTEGER"/>
        <result column="singer_name" property="singerName" jdbcType="VARCHAR"/>
        <association property="album" resultMap="AlbumResultMap"></association>
    </resultMap>
    <resultMap id="AlbumResultMap" type="org.lanqiao.entity.Album">
        <id column="album_id" property="albumId" jdbcType="INTEGER"/>
        <result column="album_name" property="albumName" jdbcType="VARCHAR"/>
        <result column="album_description" property="albumDescription" jdbcType="VARCHAR"/>
        <result column="album_company" property="albumCompany" jdbcType="VARCHAR"/>
        <result column="album_count" property="albumCount" jdbcType="INTEGER"/>
        <result column="album_create_time" property="albumCreateTime" jdbcType="TIMESTAMP"/>
        <result column="album_commet_num" property="albumCommetNum" jdbcType="INTEGER"/>
        <result column="album_keep_num" property="albumKeepNum" jdbcType="INTEGER"/>
        <result column="album_pic_url" property="albumPicUrl" jdbcType="VARCHAR"/>
        <result column="singer_id" property="singerId" jdbcType="INTEGER"/>
    </resultMap>
    <select id="selectSingerByPK_q" resultMap="SongResultMap" parameterType="java.lang.Integer">
    select song_name,song_pic_url, song_url, singer_name from song, singer where song.singer_id = singer.singer_id and song_id = #{song_id}
  </select>


    <!--查询歌单中歌曲信息-->
    <select id="selectSongBySongList" parameterType="java.lang.Integer" resultMap="SongResultMap">
        select so.song_id,so.song_name ,si.singer_name,so.song_duration,so.song_play_times,a.album_name from album a,singer si,song so,songsonglist sosol where sosol.song_id = so.song_id and si.singer_id = so.singer_id and so.album_id = a.album_id and sosol.songlist_id= #{songListId}
    </select>
    <!--查询歌曲信息-->
    <select id="selectSongInfoBySongId" parameterType="java.lang.Integer" resultMap="SongResultMap">
        select so.song_lyric,so.song_commet_count,so.song_name,so.song_url,so.song_pic_url,a.album_name,si.singer_name from song so,album a,singer si where si.singer_id = so.singer_id and a.album_id = so.album_id and so.song_id = #{songId}
    </select>

    <!--查询单曲信息-->
    <select id="selectSong" parameterType="java.lang.Integer" resultMap="SongResultMap">
        select song_name,song_url,song_pic_url from song where song_id = 1
    </select>

    <!--查询播放次数最多单曲-->
    <select id="selectSongByPlayTimes" parameterType="java.lang.Integer" resultMap="SongResultMap">
        select song_name,song_id from song order by song_play_times desc limit 10
    </select>

    <!--按照创建时间查询歌曲-->
    <select id="selectSongByCreateTime" parameterType="java.lang.Integer" resultMap="SongResultMap">
        select song_name,song_id from song order by song_play_times desc limit 10
    </select>

    <!--随机查询十首单曲-->
    <select id="selectTenSong" parameterType="java.lang.Integer" resultMap="SongResultMap">
        select song_name,song_id from song order by rand() limit 10
    </select>
<!--    &lt;!&ndash;查询歌单歌单总播放次数&ndash;&gt;-->
<!--    <select id="selectSongPlayCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">-->
<!--      select sum(song_play_times) from song so,songsonglist sosol where sosol.song_id = so.song_id and sosol.songlist_id= #{songListId}-->
<!--    </select>-->
<!--    &lt;!&ndash;查询歌单歌单总数&ndash;&gt;-->
<!--    <select id="selectSongCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">-->
<!--      select count(so.song_id) from son so,songsonglist sosol where sosol.song_id = so.song_id and sosol.songlist_id= #{songListId}-->
<!--    </select>-->

    <!-- Lzc : select lyric -->
    <select id="selectLyricByInput" resultMap="SongResultMap" parameterType="java.lang.String">
        select so.song_id,so.song_name,so.song_duration,so.song_lyric,si.singer_id,si.singer_name,al.album_id,al.album_name from song so,singer si,album al where (song_lyric like concat('%',#{input},'%')) and so.album_id = al.album_id and so.singer_id = si.singer_id
    </select>

    <sql id="Base_Column_List">
    song_id, song_name, song_lyric, song_description, song_url, song_duration, song_download, 
    song_commet_count, song_play_times, song_create_date, song_status, song_keep_num, 
    album_id, song_pic_url, singer_id
  </sql>
    <select id="selectByPrimaryKey" resultMap="SongResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from song
        where song_id = #{songId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from song
    where song_id = #{songId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="org.lanqiao.entity.Song">
    insert into song (song_id, song_name, song_lyric, 
      song_description, song_url, song_duration, 
      song_download, song_commet_count, song_play_times, 
      song_create_date, song_status, song_keep_num, 
      album_id, song_pic_url, singer_id
      )
    values (#{songId,jdbcType=INTEGER}, #{songName,jdbcType=VARCHAR}, #{songLyric,jdbcType=VARCHAR}, 
      #{songDescription,jdbcType=VARCHAR}, #{songUrl,jdbcType=VARCHAR}, #{songDuration,jdbcType=VARCHAR}, 
      #{songDownload,jdbcType=INTEGER}, #{songCommetCount,jdbcType=INTEGER}, #{songPlayTimes,jdbcType=INTEGER}, 
      #{songCreateDate,jdbcType=TIMESTAMP}, #{songStatus,jdbcType=INTEGER}, #{songKeepNum,jdbcType=INTEGER}, 
      #{albumId,jdbcType=INTEGER}, #{songPicUrl,jdbcType=VARCHAR}, #{singerId,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="org.lanqiao.entity.Song">
        insert into song
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="songId != null">
                song_id,
            </if>
            <if test="songName != null">
                song_name,
            </if>
            <if test="songLyric != null">
                song_lyric,
            </if>
            <if test="songDescription != null">
                song_description,
            </if>
            <if test="songUrl != null">
                song_url,
            </if>
            <if test="songDuration != null">
                song_duration,
            </if>
            <if test="songDownload != null">
                song_download,
            </if>
            <if test="songCommetCount != null">
                song_commet_count,
            </if>
            <if test="songPlayTimes != null">
                song_play_times,
            </if>
            <if test="songCreateDate != null">
                song_create_date,
            </if>
            <if test="songStatus != null">
                song_status,
            </if>
            <if test="songKeepNum != null">
                song_keep_num,
            </if>
            <if test="albumId != null">
                album_id,
            </if>
            <if test="songPicUrl != null">
                song_pic_url,
            </if>
            <if test="singerId != null">
                singer_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="songId != null">
                #{songId,jdbcType=INTEGER},
            </if>
            <if test="songName != null">
                #{songName,jdbcType=VARCHAR},
            </if>
            <if test="songLyric != null">
                #{songLyric,jdbcType=VARCHAR},
            </if>
            <if test="songDescription != null">
                #{songDescription,jdbcType=VARCHAR},
            </if>
            <if test="songUrl != null">
                #{songUrl,jdbcType=VARCHAR},
            </if>
            <if test="songDuration != null">
                #{songDuration,jdbcType=VARCHAR},
            </if>
            <if test="songDownload != null">
                #{songDownload,jdbcType=INTEGER},
            </if>
            <if test="songCommetCount != null">
                #{songCommetCount,jdbcType=INTEGER},
            </if>
            <if test="songPlayTimes != null">
                #{songPlayTimes,jdbcType=INTEGER},
            </if>
            <if test="songCreateDate != null">
                #{songCreateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="songStatus != null">
                #{songStatus,jdbcType=INTEGER},
            </if>
            <if test="songKeepNum != null">
                #{songKeepNum,jdbcType=INTEGER},
            </if>
            <if test="albumId != null">
                #{albumId,jdbcType=INTEGER},
            </if>
            <if test="songPicUrl != null">
                #{songPicUrl,jdbcType=VARCHAR},
            </if>
            <if test="singerId != null">
                #{singerId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.lanqiao.entity.Song">
        update song
        <set>
            <if test="songName != null">
                song_name = #{songName,jdbcType=VARCHAR},
            </if>
            <if test="songLyric != null">
                song_lyric = #{songLyric,jdbcType=VARCHAR},
            </if>
            <if test="songDescription != null">
                song_description = #{songDescription,jdbcType=VARCHAR},
            </if>
            <if test="songUrl != null">
                song_url = #{songUrl,jdbcType=VARCHAR},
            </if>
            <if test="songDuration != null">
                song_duration = #{songDuration,jdbcType=VARCHAR},
            </if>
            <if test="songDownload != null">
                song_download = #{songDownload,jdbcType=INTEGER},
            </if>
            <if test="songCommetCount != null">
                song_commet_count = #{songCommetCount,jdbcType=INTEGER},
            </if>
            <if test="songPlayTimes != null">
                song_play_times = #{songPlayTimes,jdbcType=INTEGER},
            </if>
            <if test="songCreateDate != null">
                song_create_date = #{songCreateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="songStatus != null">
                song_status = #{songStatus,jdbcType=INTEGER},
            </if>
            <if test="songKeepNum != null">
                song_keep_num = #{songKeepNum,jdbcType=INTEGER},
            </if>
            <if test="albumId != null">
                album_id = #{albumId,jdbcType=INTEGER},
            </if>
            <if test="songPicUrl != null">
                song_pic_url = #{songPicUrl,jdbcType=VARCHAR},
            </if>
            <if test="singerId != null">
                singer_id = #{singerId,jdbcType=INTEGER},
            </if>
        </set>
        where song_id = #{songId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.lanqiao.entity.Song">
    update song
    set song_name = #{songName,jdbcType=VARCHAR},
      song_lyric = #{songLyric,jdbcType=VARCHAR},
      song_description = #{songDescription,jdbcType=VARCHAR},
      song_url = #{songUrl,jdbcType=VARCHAR},
      song_duration = #{songDuration,jdbcType=VARCHAR},
      song_download = #{songDownload,jdbcType=INTEGER},
      song_commet_count = #{songCommetCount,jdbcType=INTEGER},
      song_play_times = #{songPlayTimes,jdbcType=INTEGER},
      song_create_date = #{songCreateDate,jdbcType=TIMESTAMP},
      song_status = #{songStatus,jdbcType=INTEGER},
      song_keep_num = #{songKeepNum,jdbcType=INTEGER},
      album_id = #{albumId,jdbcType=INTEGER},
      song_pic_url = #{songPicUrl,jdbcType=VARCHAR},
      singer_id = #{singerId,jdbcType=INTEGER}
    where song_id = #{songId,jdbcType=INTEGER}
  </update>


</mapper>